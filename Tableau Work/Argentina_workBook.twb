<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Indicators_Combined' inline='true' name='federated.1904z6q0e2z6a114y16w91yqlptd' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Indicators_Combined' name='textscan.0pm4q950fffsqe12nobh01dgp8dr'>
            <connection class='textscan' directory='P:/ADS/Final' filename='Indicators_Combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0pm4q950fffsqe12nobh01dgp8dr' name='Indicators_Combined.csv' table='[Indicators_Combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryName' ordinal='0' />
            <column datatype='string' name='CountryCode' ordinal='1' />
            <column datatype='string' name='IndicatorCode' ordinal='2' />
            <column datatype='real' name='Value' ordinal='3' />
            <column datatype='string' name='Value Description' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorCode]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>IndicatorCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Value Description]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>Value Description</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Indicators_Combined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Indicator Code' datatype='string' name='[IndicatorCode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.519231' measure-ordering='alphabetic' measure-percentage='0.480769' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age Dependancy Ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Age dependency ratio (\% of working-age population)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Agricultural Land'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Agricultural land (\% of land area)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Birth Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Birth rate, crude (per 1,000 people)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Exports of goods and services'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Exports of goods and services (\% of GDP)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;GDP (current US$)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='GDP growth %'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;GDP growth (annual \%)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Population growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Population growth (annual \%)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Reserves'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Total reserves (includes gold, current US$)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Trade %'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicators_Combined' name='federated.1904z6q0e2z6a114y16w91yqlptd' />
          </datasources>
          <datasource-dependencies datasource='federated.1904z6q0e2z6a114y16w91yqlptd'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Value Description]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value Description]' derivation='None' name='[none:Value Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]'>
            <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]'>
            <groupfilter function='member' level='[none:Value Description:nk]' member='&quot;Age dependency ratio (\% of working-age population)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]</column>
            <column>[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1904z6q0e2z6a114y16w91yqlptd].[sum:Value:qk]</rows>
        <cols>(([federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk] / [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]) * [federated.1904z6q0e2z6a114y16w91yqlptd].[none:Year:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Agricultural Land'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Birth Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Age Dependancy Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Exports of goods and services'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='GDP growth %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Population growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Total Reserves'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Trade %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:Value Description:nk]' type='filter' />
            <card param='[federated.1904z6q0e2z6a114y16w91yqlptd].[none:CountryName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Dependancy Ratio' width='192'>
      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
      A+PEFP7Q1mFOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Agricultural Land' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Birth Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exports of goods and services' width='192'>
      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
      KGB1ppJkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP growth %' width='192'>
      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
      qQn3ACGXmv8Pt9eTk4FBehUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population growth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Reserves' width='192'>
      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
      rfn/1TT6LceMGYQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trade %' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
